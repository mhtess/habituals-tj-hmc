var fpath = "/Users/mht/Documents/research/habituals/models/priors/data/"
var fpath2 = "/Users/mht/Documents/research/habituals/models/truthjudgement/data/"

var priorData = tjUtils.readCSV(fpath+"prior1_workday-for-work.csv").data
var tjData = tjUtils.readCSV(fpath2+"tj-1.csv").data

var df = dataFrame(priorData, ["trial_num", "existence", "nTimes","frequency","logFreq"])
var df_tj = dataFrame(tjData, ["freqLevel","n","frequency", "logFreq"])

var items = _.uniq(_.pluck(df_tj, "habitual"))

var priorModel = function(){

	// var phi = uniform(0,1)
	var phi = 0

	foreach(items, function(i){
		
		var itemData = subset(df, "item", i)

		// % of Americans question
		var gamma = uniform(0,1)
		var delta = uniform(0,50)

		var scr1 = sum(map(function(d){
			return betaERP.score([shape_alpha(gamma,delta),
									shape_beta(gamma,delta)], avoidEnds(d))
		}, _.pluck(itemData, "existence")))

		factor(scr1)

		var predictiveExistence = beta(shape_alpha(gamma,delta), shape_beta(gamma,delta))

		// frequency
		var mu = gaussian(0,50)
		var sigma = uniform(0,20)

		var scr2 = sum(map(function(d){
			return gaussianERP.score([mu, sigma], d)
		}, _.pluck(itemData, "logFreq")))

		factor(scr2)

		// CHANGE ME
		var discretizedPrior = discretizeLogNormalPrior(predictiveExistence, mu, sigma)

		// for communication with habituals.wppl
		query.add(i, discretizedPrior)

	})

	return query
}